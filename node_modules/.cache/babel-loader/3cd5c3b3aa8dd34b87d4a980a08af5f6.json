{"ast":null,"code":"var _jsxFileName = \"/Users/dominikstein/Development/React-Projects/chore-door-generator-module/src/modules/App/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport Navigation from '../Navigation/navigation';\nimport Score from '../Score/Score';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton'; //Imports Pictures for rendering later\n\nimport closedDoor from \"./closed_door.svg\";\nimport robotDoor from \"./robot_door.svg\";\nimport beachDoor from \"./beach_door.svg\";\nimport spaceDoor from \"./space_door.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst doorImage = {\n  closedDoor: closedDoor,\n  robot: robotDoor,\n  beach: beachDoor,\n  space: spaceDoor\n};\n\nfunction App() {\n  _s();\n\n  //Declare React States\n  const [numClosedDoors, setNumClosedDoors] = useState(0);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(false);\n  const [doors, setDoors] = useState([{\n    id: 'door1',\n    src: '',\n    closedDoor: doorImage.closedDoor,\n    open: false\n  }, {\n    id: 'door2',\n    src: '',\n    closedDoor: doorImage.closedDoor,\n    open: false\n  }, {\n    id: 'door3',\n    src: '',\n    closedDoor: doorImage.closedDoor,\n    open: false\n  }]);\n  const [startButtonText, setStartButtonText] = useState(\"Spiel starten\");\n  const [wins, setWins] = useState(0);\n  const [losses, setLosses] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      winCount: wins,\n      lossCount: losses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoorGame, {\n      doors: doors,\n      currentlyPlaying: currentlyPlaying,\n      openDoorLogic: openDoor,\n      checkIfGameOver: gameOver,\n      checkForRobot: checkForRobot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameButton, {\n      buttonText: startButtonText,\n      currentlyPlaying: currentlyPlaying,\n      startGame: handleGameConfigurations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ff1m1VSHENGZSjkcbFYARTYLJVI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dominikstein/Development/React-Projects/chore-door-generator-module/src/modules/App/App.js"],"names":["React","useState","Navigation","Score","DoorGame","GameButton","doorImage","closedDoor","robot","robotDoor","beach","beachDoor","space","spaceDoor","App","numClosedDoors","setNumClosedDoors","currentlyPlaying","setCurrentlyPlaying","doors","setDoors","id","src","open","startButtonText","setStartButtonText","wins","setWins","losses","setLosses","openDoor","gameOver","checkForRobot","handleGameConfigurations"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;;;;;;;AAMA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAEA,UADE;AAEdC,EAAAA,KAAK,EAAEC,SAFO;AAGdC,EAAAA,KAAK,EAAEC,SAHO;AAIdC,EAAAA,KAAK,EAAEC;AAJO,CAAlB;;AAQA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA,QAAM,CAAEC,cAAF,EAAkBC,iBAAlB,IAAwCf,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAAEgB,gBAAF,EAAoBC,mBAApB,IAA4CjB,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAAEkB,KAAF,EAASC,QAAT,IAAsBnB,QAAQ,CAClC,CACE;AAACoB,IAAAA,EAAE,EAAE,OAAL;AAAcC,IAAAA,GAAG,EAAE,EAAnB;AAAuBf,IAAAA,UAAU,EAAED,SAAS,CAACC,UAA7C;AAAyDgB,IAAAA,IAAI,EAAE;AAA/D,GADF,EAEE;AAACF,IAAAA,EAAE,EAAE,OAAL;AAAcC,IAAAA,GAAG,EAAE,EAAnB;AAAuBf,IAAAA,UAAU,EAAED,SAAS,CAACC,UAA7C;AAAyDgB,IAAAA,IAAI,EAAE;AAA/D,GAFF,EAGE;AAACF,IAAAA,EAAE,EAAE,OAAL;AAAcC,IAAAA,GAAG,EAAE,EAAnB;AAAuBf,IAAAA,UAAU,EAAED,SAAS,CAACC,UAA7C;AAAyDgB,IAAAA,IAAI,EAAE;AAA/D,GAHF,CADkC,CAApC;AAME,QAAM,CAAEC,eAAF,EAAmBC,kBAAnB,IAA0CxB,QAAQ,CAAC,eAAD,CAAxD;AACA,QAAM,CAAEyB,IAAF,EAAQC,OAAR,IAAoB1B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAE2B,MAAF,EAAUC,SAAV,IAAwB5B,QAAQ,CAAC,CAAD,CAAtC;AAEF,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEyB,IAAjB;AAAuB,MAAA,SAAS,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AACE,MAAA,KAAK,EAAET,KADT;AAEE,MAAA,gBAAgB,EAAEF,gBAFpB;AAGE,MAAA,aAAa,EAAEa,QAHjB;AAIE,MAAA,eAAe,EAAEC,QAJnB;AAKE,MAAA,aAAa,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,YAHF,eASE,QAAC,UAAD;AACE,MAAA,UAAU,EAAER,eADd;AAEE,MAAA,gBAAgB,EAAEP,gBAFpB;AAGE,MAAA,SAAS,EAAEgB;AAHb;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhCQnB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nimport Navigation from '../Navigation/navigation';\nimport Score from '../Score/Score';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton';\n\n//Imports Pictures for rendering later\nimport closedDoor from './closed_door.svg';\nimport robotDoor from './robot_door.svg';\nimport beachDoor from './beach_door.svg';\nimport spaceDoor from './space_door.svg';\n\nconst doorImage = {\n    closedDoor: closedDoor,\n    robot: robotDoor,\n    beach: beachDoor,\n    space: spaceDoor\n};\n\n\nfunction App() {\n\n  //Declare React States\n  const [ numClosedDoors, setNumClosedDoors ] = useState(0);\n  const [ currentlyPlaying, setCurrentlyPlaying ] = useState(false);\n  const [ doors, setDoors ] = useState(\n    [\n      {id: 'door1', src: '', closedDoor: doorImage.closedDoor, open: false},\n      {id: 'door2', src: '', closedDoor: doorImage.closedDoor, open: false},\n      {id: 'door3', src: '', closedDoor: doorImage.closedDoor, open: false}\n    ]);\n    const [ startButtonText, setStartButtonText ] = useState(\"Spiel starten\");\n    const [ wins, setWins ] = useState(0);\n    const [ losses, setLosses ] = useState(0);\n\n  return (\n    <div>\n      <Navigation />\n      <Score winCount={wins} lossCount={losses}/>\n      <DoorGame\n        doors={doors}\n        currentlyPlaying={currentlyPlaying}\n        openDoorLogic={openDoor}\n        checkIfGameOver={gameOver}\n        checkForRobot={checkForRobot}/>\n      <GameButton\n        buttonText={startButtonText}\n        currentlyPlaying={currentlyPlaying}\n        startGame={handleGameConfigurations} />\n    </div>\n  );\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}