{"ast":null,"code":"var _jsxFileName = \"/Users/dominikstein/Development/React-Projects/chore-door-generator-module/src/modules/App/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport Navigation from '../Navigation/navigation';\nimport Score from '../Score/Score';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton'; //Imports Pictures for rendering later\n\nimport closedDoor from \"./closed_door.svg\";\nimport robotDoor from \"./robot_door.svg\";\nimport beachDoor from \"./beach_door.svg\";\nimport spaceDoor from \"./space_door.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst doorImage = {\n  closedDoor: closedDoor,\n  robot: robotDoor,\n  beach: beachDoor,\n  space: spaceDoor\n};\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    numClosedDoors: 0,\n    currentlyPlaying: false,\n    doors: [{\n      id: 'door1',\n      src: '',\n      closedDoor: doorImage.closedDoor,\n      open: false\n    }, {\n      id: 'door2',\n      src: '',\n      closedDoor: doorImage.closedDoor,\n      open: false\n    }, {\n      id: 'door3',\n      src: '',\n      closedDoor: doorImage.closedDoor,\n      open: false\n    }],\n    startButtonText: 'Spiel starten',\n    wins: 0,\n    losses: 0\n  });\n  const [numClosedDoors, setNumClosedDoors] = useState(0);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(false);\n  const [doors, setDoors] = useState([{\n    id: 'door1',\n    src: '',\n    closedDoor: doorImage.closedDoor,\n    open: false\n  }, {\n    id: 'door2',\n    src: '',\n    closedDoor: doorImage.closedDoor,\n    open: false\n  }, {\n    id: 'door3',\n    src: '',\n    closedDoor: doorImage.closedDoor,\n    open: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      winCount: this.state.wins,\n      lossCount: this.state.losses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoorGame, {\n      doors: this.state.doors,\n      currentlyPlaying: this.state.currentlyPlaying,\n      openDoorLogic: this.openDoor,\n      checkIfGameOver: this.gameOver,\n      checkForRobot: this.checkForRobot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameButton, {\n      buttonText: this.state.startButtonText,\n      currentlyPlaying: this.state.currentlyPlaying,\n      startGame: this.handleGameConfigurations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Clsz+F8gOh8F96xW9CsRmDriveo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dominikstein/Development/React-Projects/chore-door-generator-module/src/modules/App/App.js"],"names":["React","useState","Navigation","Score","DoorGame","GameButton","doorImage","closedDoor","robot","robotDoor","beach","beachDoor","space","spaceDoor","App","state","setState","numClosedDoors","currentlyPlaying","doors","id","src","open","startButtonText","wins","losses","setNumClosedDoors","setCurrentlyPlaying","setDoors","openDoor","gameOver","checkForRobot","handleGameConfigurations"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nimport Navigation from '../Navigation/navigation';\nimport Score from '../Score/Score';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton';\n\n//Imports Pictures for rendering later\nimport closedDoor from './closed_door.svg';\nimport robotDoor from './robot_door.svg';\nimport beachDoor from './beach_door.svg';\nimport spaceDoor from './space_door.svg';\n\nconst doorImage = {\n    closedDoor: closedDoor,\n    robot: robotDoor,\n    beach: beachDoor,\n    space: spaceDoor\n};\n\n\nfunction App() {\n  const [state, setState] = useState({\n    numClosedDoors: 0,\n      currentlyPlaying: false,\n      doors: [\n        {id: 'door1', src: '', closedDoor: doorImage.closedDoor, open: false},\n        {id: 'door2', src: '', closedDoor: doorImage.closedDoor, open: false},\n        {id: 'door3', src: '', closedDoor: doorImage.closedDoor, open: false}\n      ],\n      startButtonText: 'Spiel starten',\n      wins: 0,\n      losses: 0\n  })\n  const [ numClosedDoors, setNumClosedDoors ] = useState(0);\n  const [ currentlyPlaying, setCurrentlyPlaying ] = useState(false);\n  const [ doors, setDoors ] = useState(\n    [\n      {id: 'door1', src: '', closedDoor: doorImage.closedDoor, open: false},\n      {id: 'door2', src: '', closedDoor: doorImage.closedDoor, open: false},\n      {id: 'door3', src: '', closedDoor: doorImage.closedDoor, open: false}\n    ]);\n\n  return (\n    <div>\n      <Navigation />\n      <Score winCount={this.state.wins} lossCount={this.state.losses}/>\n      <DoorGame\n        doors={this.state.doors}\n        currentlyPlaying={this.state.currentlyPlaying}\n        openDoorLogic={this.openDoor}\n        checkIfGameOver={this.gameOver}\n        checkForRobot={this.checkForRobot}/>\n      <GameButton\n        buttonText={this.state.startButtonText}\n        currentlyPlaying={this.state.currentlyPlaying}\n        startGame={this.handleGameConfigurations} />\n    </div>\n  );\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}