{"ast":null,"code":"var _jsxFileName = \"/Users/dominikstein/Development/React-Projects/chore-door-generator-module/src/modules/DoorGame/doorGame.js\";\nimport React from 'react';\nimport './doorGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoorGame(props) {\n  const handleOnClick = event => {\n    openDoor(event);\n    props.checkForRobot(event.target.id);\n  };\n\n  const handleCheckForGameOver = () => {\n    props.checkIfGameOver();\n  };\n\n  const openDoor = event => {\n    let listOfDoors = props.doors;\n    let chosenDoor = listOfDoors.indexOf(listOfDoors.find(doorKey => doorKey.id === event.target.id));\n\n    if (listOfDoors[chosenDoor].open === false) {\n      props.openDoorLogic(event.target.id);\n    } else {\n      console.log('Error: Door is already opened');\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"door-row\",\n    children: props.doors.map(door => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        id: door.id,\n        className: \"door-frame\",\n        src: props.currentlyPlaying === false && door.open === false || props.currentlyPlaying === true && door.open === false ? door.closedDoor : door.src,\n        isOpen: door.open,\n        onClick: handleOnClick\n      }, door.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = DoorGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoorGame\");","map":{"version":3,"sources":["/Users/dominikstein/Development/React-Projects/chore-door-generator-module/src/modules/DoorGame/doorGame.js"],"names":["React","DoorGame","props","handleOnClick","event","openDoor","checkForRobot","target","id","handleCheckForGameOver","checkIfGameOver","listOfDoors","doors","chosenDoor","indexOf","find","doorKey","open","openDoorLogic","console","log","map","door","currentlyPlaying","closedDoor","src"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEpC,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAF,IAAAA,KAAK,CAACI,aAAN,CAAoBF,KAAK,CAACG,MAAN,CAAaC,EAAjC;AACH,GAHD;;AAKA,QAAMC,sBAAsB,GAAG,MAAM;AACjCP,IAAAA,KAAK,CAACQ,eAAN;AACH,GAFD;;AAIA,QAAML,QAAQ,GAAID,KAAD,IAAW;AACxB,QAAIO,WAAW,GAAGT,KAAK,CAACU,KAAxB;AACA,QAAIC,UAAU,GAAGF,WAAW,CAACG,OAAZ,CAAoBH,WAAW,CAACI,IAAZ,CAAiBC,OAAO,IAAKA,OAAO,CAACR,EAAR,KAAeJ,KAAK,CAACG,MAAN,CAAaC,EAAzD,CAApB,CAAjB;;AACA,QAAGG,WAAW,CAACE,UAAD,CAAX,CAAwBI,IAAxB,KAAiC,KAApC,EAA0C;AACtCf,MAAAA,KAAK,CAACgB,aAAN,CAAoBd,KAAK,CAACG,MAAN,CAAaC,EAAjC;AACH,KAFD,MAEO;AACHW,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA;AACH;AACJ,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAEQlB,KAAK,CAACU,KAAN,CAAYS,GAAZ,CAAgBC,IAAI,IAAI;AACtB,0BAAO;AAEP,QAAA,EAAE,EAAEA,IAAI,CAACd,EAFF;AAGP,QAAA,SAAS,EAAC,YAHH;AAIL,QAAA,GAAG,EAAGN,KAAK,CAACqB,gBAAN,KAA2B,KAA3B,IAAoCD,IAAI,CAACL,IAAL,KAAc,KAAnD,IACAf,KAAK,CAACqB,gBAAN,KAA2B,IAA3B,IAAmCD,IAAI,CAACL,IAAL,KAAc,KADjD,GAEDK,IAAI,CAACE,UAFJ,GAEiBF,IAAI,CAACG,GANtB;AAOP,QAAA,MAAM,EAAEH,IAAI,CAACL,IAPN;AAQP,QAAA,OAAO,EAAEd;AARF,SACFmB,IAAI,CAACd,EADH;AAAA;AAAA;AAAA;AAAA,cAAP;AASL,KAVG;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;KAvCuBP,Q","sourcesContent":["import React from 'react';\nimport './doorGame.css';\n\nexport default function DoorGame(props) {\n\n    const handleOnClick = (event) => {\n        openDoor(event);\n        props.checkForRobot(event.target.id);\n    }\n\n    const handleCheckForGameOver = () => {\n        props.checkIfGameOver();\n    }\n\n    const openDoor = (event) => {\n        let listOfDoors = props.doors;\n        let chosenDoor = listOfDoors.indexOf(listOfDoors.find(doorKey => (doorKey.id === event.target.id)));\n        if(listOfDoors[chosenDoor].open === false){\n            props.openDoorLogic(event.target.id);\n        } else {\n            console.log('Error: Door is already opened');\n            return;\n        }\n    }\n\n    return (\n        <div className=\"door-row\">\n            {\n                props.doors.map(door => {\n                  return <img\n                  key={door.id}\n                  id={door.id}\n                  className=\"door-frame\"\n                    src={(props.currentlyPlaying === false && door.open === false) || \n                        (props.currentlyPlaying === true && door.open === false) ? \n                        door.closedDoor : door.src}\n                  isOpen={door.open} \n                  onClick={handleOnClick} />\n            })\n        }\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}